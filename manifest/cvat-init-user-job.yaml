apiVersion: batch/v1
kind: Job
metadata:
  name: cvat-init-create-users
spec:
  ttlSecondsAfterFinished: 10
  template:
    metadata:
      labels:
        app: cvat-init-create-users
    spec:
      restartPolicy: OnFailure
      containers:
      - name: cvat
        securityContext:
          runAsUser: 0
        image: openvino/cvat_server:v2.1.0
        env:
          - name: CVAT_POSTGRES_HOST
            value: "cvat-db"
          - name: CVAT_POSTGRES_PORT
            value: "5432"
          - name: CVAT_POSTGRES_DBNAME
            value: "cvat"
          - name: CVAT_POSTGRES_USER
            value: "root"
          - name: CVAT_POSTGRES_PASSWORD
            value: "password"
          - name: CVAT_REDIS_HOST
            value: "cvat-redis"
          - name: GENERATED_USERNAME
            valueFrom:
              secretKeyRef:
                name: cvat-superuser
                key: username
          - name: GENERATED_PASSWORD
            valueFrom:
              secretKeyRef:
                name: cvat-superuser
                key: password
        command: ["/bin/sh", "-c"]
        args:
          - |
            cat <<EOF | python manage.py shell
            from django.contrib.auth import get_user_model
            import os
            User = get_user_model()
            User.objects.filter(username='admin').exists() or \
              User.objects.create_superuser('admin', 'contact@neutron-it.fr', 'cvat')
            User.objects.filter(username=os.getenv('GENERATED_USERNAME')).exists() or \
              User.objects.create_superuser(os.getenv('GENERATED_USERNAME'), 'autogenerated@cvat-helm.org', os.getenv('GENERATED_PASSWORD'))
            usr = User.objects.get(username=os.getenv('GENERATED_USERNAME'))
            usr.set_password(os.getenv('GENERATED_PASSWORD'))
            usr.save()
            EOF
